[{"id":"d311cf63.87e48","type":"tab","label":"Watson Assistant Sample App","disabled":false,"info":""},{"id":"b4bc5830.f32448","type":"http in","z":"d311cf63.87e48","name":"","url":"/api/message","method":"post","upload":false,"swaggerDoc":"","x":244,"y":331,"wires":[["805b81d2.93d7f"]]},{"id":"805b81d2.93d7f","type":"function","z":"d311cf63.87e48","name":"","func":"var newContext = {\n  global : {\n    system : {\n      turn_count : 1\n    }\n  }\n};\n\nvar contextWithAcc = (msg.payload.context) ? msg.payload.context : newContext;\n\nif (msg.payload.context) {\n    contextWithAcc.global.system.turn_count += 1;\n}\n\nvar textIn = '';\nif (msg.payload.input){\n    textIn = msg.payload.input.text;\n}\n\nvar session_id = msg.payload.session_id;\n\nmsg.payload = textIn;\n\nmsg.params = {};\nmsg.params.context = contextWithAcc;\nmsg.params.session_id = session_id;\n\nmsg.params.apikey = global.get(\"WA_API_KEY\")||\"\";\nmsg.params.assistant_id = global.get(\"WA_ASSISTANT_ID\")||\"\";\n\nreturn msg;","outputs":1,"noerr":0,"x":409,"y":332,"wires":[["41dca3cf.68ecfc"]]},{"id":"41dca3cf.68ecfc","type":"watson-assistant-v2","z":"d311cf63.87e48","name":"Watson Assistant API","default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/assistant/api","assistant_id":"","debug":false,"restart":false,"return_context":true,"alternate_intents":false,"multisession":true,"timeout":"","optout-learning":false,"x":583,"y":332,"wires":[["a8f0eb09.fa8e18"]]},{"id":"a8f0eb09.fa8e18","type":"http response","z":"d311cf63.87e48","name":"","statusCode":"","headers":{},"x":761,"y":331.66668701171875,"wires":[]},{"id":"75a7f561.df931c","type":"http in","z":"d311cf63.87e48","name":"","url":"/api/session","method":"get","upload":false,"swaggerDoc":"","x":228,"y":230,"wires":[["cf785d92.0090b"]]},{"id":"19253691.d83c09","type":"http response","z":"d311cf63.87e48","name":"","statusCode":"","headers":{},"x":747,"y":230,"wires":[]},{"id":"cf785d92.0090b","type":"function","z":"d311cf63.87e48","name":"","func":"msg.payload = '';\n\nmsg.params = {};\nmsg.params.apikey = global.get(\"WA_API_KEY\")||\"\";\nmsg.params.assistant_id = global.get(\"WA_ASSISTANT_ID\")||\"\";\n\nreturn msg;","outputs":1,"noerr":0,"x":386,"y":230,"wires":[["e2d93ef2.4bddf"]]},{"id":"83c92be3.9016c8","type":"http response","z":"d311cf63.87e48","name":"","statusCode":"","headers":{},"x":1053.75,"y":556,"wires":[]},{"id":"342ca205.8d287e","type":"function","z":"d311cf63.87e48","name":"Collect Chat Logs and Session ID","func":"//Manage inputs from two different sources\ncontext.set('get_logs_node_1_input', context.get('get_logs_node_1_input') || false);\ncontext.set('keep_session_id_node_2_input', context.get('keep_session_id_node_2_input') || false);\n\n//Input from the \"Keep Session ID\" Node has arrived\nif (msg.topic == \"session_id\"){\n    //Store info in current node's context\n    //context.set('keep_session_id_node_2_input', msg.payload.session_id); \n    //Now it's a query parameter...\n    context.set('keep_session_id_node_2_input', msg.req.query.session_id);\n}\n//Input from the \"Watson Assistant API - Get Logs (Chat Transcripts)\" Node has arrived\nelse {\n    //Store info in current node's context\n    context.set('get_logs_node_1_input', msg.payload);\n}\n\n//Both inputs have arrived\nif (context.get('get_logs_node_1_input') && context.get('keep_session_id_node_2_input')){\n    \n    var logs = JSON.parse(context.get('get_logs_node_1_input'));\n    var session_id = context.get('keep_session_id_node_2_input');\n    \n    //Set output of this node to contain both chat logs and the session ID\n    msg.payload = {};\n    msg.payload.logs = logs;\n    msg.payload.session_id = session_id;\n    \n    //Clear context for the next time flow is executed   \n    context.set('get_logs_node_1_input', false);\n    context.set('keep_session_id_node_2_input', false);\n    \n} \n//Only one input has arrived. Do not pass along a message yet\nelse {\n    return null;\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1128.25,"y":464,"wires":[["74f51019.a486c"]]},{"id":"bc7f8eb8.2f26d","type":"http request","z":"d311cf63.87e48","name":"Watson Assistant API - Get Logs","method":"GET","ret":"txt","url":"","tls":"","x":808.25,"y":464.5,"wires":[["342ca205.8d287e"]]},{"id":"703072af.95b4cc","type":"function","z":"d311cf63.87e48","name":"Keep Session ID","func":"msg.topic = \"session_id\";\n\nreturn msg;","outputs":1,"noerr":0,"x":673.875,"y":506.75,"wires":[["342ca205.8d287e"]]},{"id":"3cf9779a.9fd7f8","type":"function","z":"d311cf63.87e48","name":"Set Params for Request","func":"var workspace_id = global.get(\"WA_WORKSPACE_ID\")||\"\";\nvar apikey = global.get(\"WA_API_KEY\")||\"\";\n\nmsg.url = 'https://gateway.watsonplatform.net/assistant/api/v1/workspaces/' + workspace_id + '/logs?version=2019-02-28&sort=-request_timestamp';\n\n//HTTP Basic Auth using apikey:<apikey>\nvar cred_plain_text = \"apikey:\" + apikey;\nvar buff = new Buffer(cred_plain_text);\nvar cred_base64 = buff.toString('base64');\nmsg.headers = {};\nmsg.headers.Authorization = \"Basic \" + cred_base64;\n\nreturn msg;","outputs":1,"noerr":0,"x":534.75,"y":465.5,"wires":[["bc7f8eb8.2f26d"]]},{"id":"74f51019.a486c","type":"function","z":"d311cf63.87e48","name":"Filter Chat Logs by Session_ID, Create Transcript, Store Context","func":"var chat_transcript = [];\nvar chat_context = {};\n\n//Filter every log by msg.logs.logs[{request.context.system.session_id}] == session_id\nvar session_log = msg.payload.logs.logs.filter(function(el){\n    if (el.request.context.system){\n        return el.request.context.system.session_id == msg.payload.session_id;\n    }\n    return false;\n});\n\n\n//Reverse order of session log for correct transcript order\nvar session_log = session_log.reverse();\n\n//Create transcript of the conversation to provide to the agent. (First element is a repeat so skip.)\nif (session_log.length>1){\n    for (var i=1; i < session_log.length; i++){\n        var el = session_log[i];\n        el.response.input.text && chat_transcript.push(\"<i>Customer:</i> \" + el.response.input.text);\n        chat_transcript.push(\"<i>Watson:</i> \" + el.response.output.text);\n        \n        //Store the context of the conversation at the time of the agent transfer \n        if (i == session_log.length - 1){\n            chat_context = el.response.context;\n            \n            //Keep only user-set context variables.\n            delete chat_context.system;\n            delete chat_context.metadata;\n            delete chat_context.conversation_id;\n            chat_context.wds && delete chat_context.wds;\n        }\n    }\n}\n\nmsg.payload.chat_transcript = chat_transcript;\nmsg.payload.chat_context = chat_context;\nmsg.payload.chat_logs = session_log;\n\nreturn msg;","outputs":1,"noerr":0,"x":1169.125,"y":508.75,"wires":[["83c92be3.9016c8"]]},{"id":"d5b83b4d.962928","type":"http in","z":"d311cf63.87e48","name":"","url":"/api/session-transcript","method":"get","upload":false,"swaggerDoc":"","x":276,"y":465,"wires":[["3cf9779a.9fd7f8","703072af.95b4cc"]]},{"id":"e2d93ef2.4bddf","type":"watson-assistant-v2","z":"d311cf63.87e48","name":"Watson Assistant API","default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/assistant/api","assistant_id":"","debug":false,"restart":false,"return_context":false,"alternate_intents":false,"multisession":true,"timeout":"","optout-learning":false,"x":562,"y":230,"wires":[["19253691.d83c09"]]},{"id":"58605c03.845a24","type":"change","z":"d311cf63.87e48","name":"WATSON ASSISTANT CONNECTION INFO","rules":[{"t":"set","p":"WA_API_KEY","pt":"global","to":"<YOUR_WA_API_KEY>","tot":"str"},{"t":"set","p":"WA_ASSISTANT_ID","pt":"global","to":"<YOUR_WA_ASSISTANT_ID>","tot":"str"},{"t":"set","p":"WA_WORKSPACE_ID","pt":"global","to":"<YOUR_WA_WORKSPACE_ID>","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":547,"y":106,"wires":[[]]},{"id":"a2b4411.6184bc","type":"inject","z":"d311cf63.87e48","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":247,"y":106,"wires":[["58605c03.845a24"]]},{"id":"814c3e3.77693c","type":"comment","z":"d311cf63.87e48","name":"Watson Assistant Sample App - Simple REST API to Interact with Watson Assistant","info":"","x":436,"y":60,"wires":[]},{"id":"3ccd5651.61245a","type":"comment","z":"d311cf63.87e48","name":"<<<IMPORTANT! Add info specific to your Watson Assistant service to the CONNECTION INFO Node","info":"","x":1086,"y":106,"wires":[]},{"id":"e9e76b78.3a0318","type":"comment","z":"d311cf63.87e48","name":"GET /api/session - Create a Watson Assistant Session","info":"","x":353,"y":179,"wires":[]},{"id":"9112830a.783ab","type":"comment","z":"d311cf63.87e48","name":"POST /api/message - Send a Message to Watson Assistant","info":"","x":372,"y":289,"wires":[]},{"id":"8bddf4e4.9ed168","type":"comment","z":"d311cf63.87e48","name":"GET /api/session-transcript - Get a post-conversation transcript for a specific conversation session using the WA logs API.","info":"","x":564,"y":417,"wires":[]},{"id":"304c7edb.b3ea12","type":"comment","z":"d311cf63.87e48","name":"<<<IMPORTANT! Add API Key credentials to both Watson Assistant API nodes","info":"","x":1099,"y":230,"wires":[]},{"id":"8422c561.d98b48","type":"comment","z":"d311cf63.87e48","name":"<<<IMPORTANT! Add API Key credentials to both Watson Assistant API nodes","info":"","x":1114,"y":329,"wires":[]}]